{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/routes": {
            "get": {
                "description": "Get a list of all routes available in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "routes"
                ],
                "summary": "Retrieve all routes",
                "responses": {
                    "200": {
                        "description": "List of all routes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.RouteInfo"
                            }
                        }
                    },
                    "500": {
                        "description": "Unable to retrieve routes",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new route with the specified details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "routes"
                ],
                "summary": "Add a new route",
                "parameters": [
                    {
                        "description": "Create Route Request",
                        "name": "route",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RouteCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created route information",
                        "schema": {
                            "$ref": "#/definitions/dto.RouteInfo"
                        }
                    },
                    "404": {
                        "description": "Route not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Unable to create route",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/routes/{id}": {
            "get": {
                "description": "Retrieve a route by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "routes"
                ],
                "summary": "Get route by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Route ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved route",
                        "schema": {
                            "$ref": "#/definitions/dto.RouteInfo"
                        }
                    },
                    "400": {
                        "description": "Invalid route ID",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Route not found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Unable to retrieve route",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing route by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "routes"
                ],
                "summary": "Update a route",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "uint",
                        "description": "Route ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Route Update Information",
                        "name": "route",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RouteUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated route information",
                        "schema": {
                            "$ref": "#/definitions/dto.RouteInfo"
                        }
                    },
                    "400": {
                        "description": "Invalid route ID or request format",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Unable to update route",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a route by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "routes"
                ],
                "summary": "Delete a route",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Route ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Route successfully deleted"
                    },
                    "400": {
                        "description": "Invalid route ID",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Unable to delete route",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.RouteCreateRequest": {
            "type": "object",
            "required": [
                "duration",
                "endLocation",
                "name",
                "startLocation",
                "startTime"
            ],
            "properties": {
                "duration": {
                    "description": "Ensure duration is greater than 0",
                    "type": "integer"
                },
                "endLocation": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "startLocation": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                }
            }
        },
        "dto.RouteInfo": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "duration_minutes": {
                    "type": "integer"
                },
                "end_location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "route_id": {
                    "type": "integer"
                },
                "start_location": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.RouteUpdateRequest": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "integer"
                },
                "endLocation": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "startLocation": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                }
            }
        },
        "util.ErrorMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}