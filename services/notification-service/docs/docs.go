// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "MOHAMMAD IZANAMI RAHMAN",
            "email": "takbir.jcd@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Retrieves a list of notifications, optionally filtered by user ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "List notifications",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notifications fetched successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.NotificationResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new notification based on the provided details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Create notification",
                "parameters": [
                    {
                        "description": "Create Notification Request",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateNotificationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Notification created successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.NotificationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid notification data",
                        "schema": {
                            "$ref": "#/definitions/pkg.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.APIResponse"
                        }
                    }
                }
            }
        },
        "/users/{userID}/preferences": {
            "get": {
                "description": "Retrieves notification preferences for a specific user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Preferences"
                ],
                "summary": "Get user notification preferences",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Preferences fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.UserNotificationPreferencesResponse"
                        }
                    },
                    "404": {
                        "description": "Preferences not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.APIResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates notification preferences for a specific user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Preferences"
                ],
                "summary": "Update user notification preferences",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Notification Preferences Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserNotificationPreferencesUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Preferences updated successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.UserNotificationPreferencesResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/pkg.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Preferences not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates notification preferences for a specific user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Preferences"
                ],
                "summary": "Create user notification preferences",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create Notification Preferences Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserNotificationPreferencesRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Preferences created successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.UserNotificationPreferencesResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/pkg.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.APIResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes notification preferences for a specific user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Preferences"
                ],
                "summary": "Delete user notification preferences",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Preferences deleted successfully"
                    },
                    "404": {
                        "description": "Preferences not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.APIResponse"
                        }
                    }
                }
            }
        },
        "/{id}": {
            "get": {
                "description": "Retrieves a specific notification by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Get notification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.NotificationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid notification ID",
                        "schema": {
                            "$ref": "#/definitions/pkg.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Notification not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.APIResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a specific notification by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Delete notification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Notification deleted successfully"
                    },
                    "400": {
                        "description": "Invalid notification ID",
                        "schema": {
                            "$ref": "#/definitions/pkg.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Notification not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.APIResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateNotificationRequest": {
            "type": "object",
            "required": [
                "channel",
                "content",
                "sendDate",
                "status",
                "type",
                "userID"
            ],
            "properties": {
                "acknowledged": {
                    "type": "boolean"
                },
                "channel": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "sendDate": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "dto.NotificationResponse": {
            "type": "object",
            "properties": {
                "acknowledged": {
                    "type": "boolean"
                },
                "channel": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "sendDate": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "dto.UserNotificationPreferencesRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "prefersEmail": {
                    "type": "boolean"
                },
                "prefersSMS": {
                    "type": "boolean"
                }
            }
        },
        "dto.UserNotificationPreferencesResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "prefersEmail": {
                    "type": "boolean"
                },
                "prefersSMS": {
                    "type": "boolean"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "dto.UserNotificationPreferencesUpdate": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "prefersEmail": {
                    "type": "boolean"
                },
                "prefersSMS": {
                    "type": "boolean"
                }
            }
        },
        "pkg.APIResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
